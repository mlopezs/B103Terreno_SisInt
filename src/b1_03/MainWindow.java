/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package b1_03;

import b1_03.objetos.Accion;
import b1_03.objetos.Terreno;
import b1_03.utilidades.ES_de_archivos;
import static b1_03.utilidades.ES_de_archivos.leer_archivo;
import static b1_03.utilidades.Miscelanea.crearTerreno;
import static b1_03.utilidades.Miscelanea.esValido;
import b1_03.utilidades.Resolucion;
import excepciones.EscrituraErronea;
import excepciones.LecturaErronea;
import java.security.NoSuchAlgorithmException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author pacog
 */
public class MainWindow extends javax.swing.JFrame {

    private String solucion = "";

    /**
     * Creates new form MainnWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        salida = new javax.swing.JTextArea();
        iniciar = new javax.swing.JButton();
        pathField = new javax.swing.JTextField();
        algoritmoCombobox = new javax.swing.JComboBox<>();
        guardarTextField = new javax.swing.JTextField();
        guardarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        salida.setColumns(20);
        salida.setRows(5);
        jScrollPane1.setViewportView(salida);

        iniciar.setText("Iniciar");
        iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarActionPerformed(evt);
            }
        });

        pathField.setText("terreno_2.txt");

        algoritmoCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Anchura", "Profundidad", "C. Uniforme", "A*", "Voraz" }));

        guardarTextField.setText("solucion.txt");

        guardarButton.setText("Guardar");
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(iniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(algoritmoCombobox, 0, 95, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(guardarTextField)
                    .addComponent(pathField)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pathField, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(algoritmoCombobox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(guardarButton, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                            .addComponent(guardarTextField)))
                    .addComponent(iniciar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarActionPerformed
        salida.setText("");
        // Lista donde iremos guardando los terrenos generados tras cada acción
        LinkedList<Terreno> lt = new LinkedList<>();

        // Lista de acciones posibles
        LinkedList<Accion> la;

        Terreno t; // Terreno inicial

        // Vector resultado de la lectura del fichero
        int[] datos = null;
        try {
            datos = leer_archivo(pathField.getText());
            int k = datos[2]; // Cantidad objetivo de arena
            int max = datos[3]; // Cantidad máxima de arena

            int fs = datos[4]; // Número de filas
            int cs = datos[5]; // Número de columnas

            // Vector auxiliar donde posteriormente copiamos el segmento del vector datos
            // que se corresponde con la cantidad inicial de arena en cada casilla
            int[] aux = new int[fs * cs];
            System.arraycopy(datos, 6, aux, 0, aux.length);

            // Comprobamos validez del terreno, y si lo es, lo creamos.
            if (!esValido(fs, cs, k, aux, max)) {
                salida.setText("ERROR: Los datos son incorrectos.");
            } else {

                t = crearTerreno(aux, fs, cs, datos[1], datos[0], k);

                lt.add(t); // Añadimos el terreno inicial a la lista

                // MUESTRA DE LOS DATOS RECOGIDOS Y PROCESADOS
                salida.append("k: " + k + ", max: " + max + ", fs: " + fs + ", cs: " + cs);
                salida.append(t.toString());

                try {
                    /*la = GestorAcciones.generarAcciones(t, k, fs, cs, max);
                
                // Mostramos las acciones
                Iterator<Accion> itact = la.iterator();
                while (itact.hasNext()) {
                System.out.println(itact.next());
                }*/

                    // Resto de algoritmos
                    solucion=Resolucion.algoritmoDeBusqueda(t, algoritmoCombobox.getSelectedIndex(), k, fs, cs, max, 999999999, salida);
                    salida.append(solucion);
                    // Profundidad iterativa
                    //System.out.println("\n"+Resolucion.algoritmoProfundidadIterativa(t, 1, 999999999, 150, k, fs, cs, max));
                } catch (NoSuchAlgorithmException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        } catch (LecturaErronea ex) {
            salida.setText("Archivo no encontrado-> " + pathField.getText());
        }


    }//GEN-LAST:event_iniciarActionPerformed

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed
        try {
            ES_de_archivos.escribir_linea(guardarTextField.getText(), true, solucion);
        } catch (EscrituraErronea ex) {
           salida.append("Error al guardar.");
        }
    }//GEN-LAST:event_guardarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> algoritmoCombobox;
    private javax.swing.JButton guardarButton;
    private javax.swing.JTextField guardarTextField;
    private javax.swing.JButton iniciar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField pathField;
    private javax.swing.JTextArea salida;
    // End of variables declaration//GEN-END:variables
}
